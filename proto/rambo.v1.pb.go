// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rambo.v1.proto

package rambo_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandReturnType int32

const (
	CommandReturnType_COMMAND_OUTPUT CommandReturnType = 0
)

var CommandReturnType_name = map[int32]string{
	0: "COMMAND_OUTPUT",
}

var CommandReturnType_value = map[string]int32{
	"COMMAND_OUTPUT": 0,
}

func (x CommandReturnType) String() string {
	return proto.EnumName(CommandReturnType_name, int32(x))
}

func (CommandReturnType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{0}
}

type AckStatus int32

const (
	AckStatus_RECEIVED AckStatus = 0
	AckStatus_PENDING  AckStatus = 2
	AckStatus_QUEUED   AckStatus = 3
	AckStatus_PROGRESS AckStatus = 4
)

var AckStatus_name = map[int32]string{
	0: "RECEIVED",
	2: "PENDING",
	3: "QUEUED",
	4: "PROGRESS",
}

var AckStatus_value = map[string]int32{
	"RECEIVED": 0,
	"PENDING":  2,
	"QUEUED":   3,
	"PROGRESS": 4,
}

func (x AckStatus) String() string {
	return proto.EnumName(AckStatus_name, int32(x))
}

func (AckStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{1}
}

type ResultStatus int32

const (
	ResultStatus_COMPLETE_SUCCESS     ResultStatus = 0
	ResultStatus_CANCELLED            ResultStatus = 10
	ResultStatus_COMPLETE_ERROR       ResultStatus = 11
	ResultStatus_TIMED_OUT            ResultStatus = 12
	ResultStatus_REJECTED_ID          ResultStatus = 13
	ResultStatus_REJECTED_AUTH        ResultStatus = 14
	ResultStatus_REJECTED_PARAMS      ResultStatus = 15
	ResultStatus_REJECTED_NO_RECEIVER ResultStatus = 16
	ResultStatus_FATAL                ResultStatus = 17
)

var ResultStatus_name = map[int32]string{
	0:  "COMPLETE_SUCCESS",
	10: "CANCELLED",
	11: "COMPLETE_ERROR",
	12: "TIMED_OUT",
	13: "REJECTED_ID",
	14: "REJECTED_AUTH",
	15: "REJECTED_PARAMS",
	16: "REJECTED_NO_RECEIVER",
	17: "FATAL",
}

var ResultStatus_value = map[string]int32{
	"COMPLETE_SUCCESS":     0,
	"CANCELLED":            10,
	"COMPLETE_ERROR":       11,
	"TIMED_OUT":            12,
	"REJECTED_ID":          13,
	"REJECTED_AUTH":        14,
	"REJECTED_PARAMS":      15,
	"REJECTED_NO_RECEIVER": 16,
	"FATAL":                17,
}

func (x ResultStatus) String() string {
	return proto.EnumName(ResultStatus_name, int32(x))
}

func (ResultStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{2}
}

type Stage int32

const (
	Stage_CLOUD_GATEWAY  Stage = 0
	Stage_DEVICE_GATEWAY Stage = 1
	Stage_AGENT          Stage = 2
)

var Stage_name = map[int32]string{
	0: "CLOUD_GATEWAY",
	1: "DEVICE_GATEWAY",
	2: "AGENT",
}

var Stage_value = map[string]int32{
	"CLOUD_GATEWAY":  0,
	"DEVICE_GATEWAY": 1,
	"AGENT":          2,
}

func (x Stage) String() string {
	return proto.EnumName(Stage_name, int32(x))
}

func (Stage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{3}
}

// The actual gPRC message type
type Heartbeat struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{0}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

type RequestChannelMessage struct {
	// Types that are valid to be assigned to Content:
	//	*RequestChannelMessage_Heartbeat
	//	*RequestChannelMessage_CommandRequest
	Content              isRequestChannelMessage_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RequestChannelMessage) Reset()         { *m = RequestChannelMessage{} }
func (m *RequestChannelMessage) String() string { return proto.CompactTextString(m) }
func (*RequestChannelMessage) ProtoMessage()    {}
func (*RequestChannelMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{1}
}

func (m *RequestChannelMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestChannelMessage.Unmarshal(m, b)
}
func (m *RequestChannelMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestChannelMessage.Marshal(b, m, deterministic)
}
func (m *RequestChannelMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestChannelMessage.Merge(m, src)
}
func (m *RequestChannelMessage) XXX_Size() int {
	return xxx_messageInfo_RequestChannelMessage.Size(m)
}
func (m *RequestChannelMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestChannelMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RequestChannelMessage proto.InternalMessageInfo

type isRequestChannelMessage_Content interface {
	isRequestChannelMessage_Content()
}

type RequestChannelMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof"`
}

type RequestChannelMessage_CommandRequest struct {
	CommandRequest *CommandRequest `protobuf:"bytes,2,opt,name=commandRequest,proto3,oneof"`
}

func (*RequestChannelMessage_Heartbeat) isRequestChannelMessage_Content() {}

func (*RequestChannelMessage_CommandRequest) isRequestChannelMessage_Content() {}

func (m *RequestChannelMessage) GetContent() isRequestChannelMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *RequestChannelMessage) GetHeartbeat() *Heartbeat {
	if x, ok := m.GetContent().(*RequestChannelMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *RequestChannelMessage) GetCommandRequest() *CommandRequest {
	if x, ok := m.GetContent().(*RequestChannelMessage_CommandRequest); ok {
		return x.CommandRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestChannelMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestChannelMessage_Heartbeat)(nil),
		(*RequestChannelMessage_CommandRequest)(nil),
	}
}

type ResponseChannelMessage struct {
	// Types that are valid to be assigned to Content:
	//	*ResponseChannelMessage_Heartbeat
	//	*ResponseChannelMessage_CommandResponse
	Content              isResponseChannelMessage_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ResponseChannelMessage) Reset()         { *m = ResponseChannelMessage{} }
func (m *ResponseChannelMessage) String() string { return proto.CompactTextString(m) }
func (*ResponseChannelMessage) ProtoMessage()    {}
func (*ResponseChannelMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{2}
}

func (m *ResponseChannelMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseChannelMessage.Unmarshal(m, b)
}
func (m *ResponseChannelMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseChannelMessage.Marshal(b, m, deterministic)
}
func (m *ResponseChannelMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseChannelMessage.Merge(m, src)
}
func (m *ResponseChannelMessage) XXX_Size() int {
	return xxx_messageInfo_ResponseChannelMessage.Size(m)
}
func (m *ResponseChannelMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseChannelMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseChannelMessage proto.InternalMessageInfo

type isResponseChannelMessage_Content interface {
	isResponseChannelMessage_Content()
}

type ResponseChannelMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof"`
}

type ResponseChannelMessage_CommandResponse struct {
	CommandResponse *CommandResponse `protobuf:"bytes,2,opt,name=commandResponse,proto3,oneof"`
}

func (*ResponseChannelMessage_Heartbeat) isResponseChannelMessage_Content() {}

func (*ResponseChannelMessage_CommandResponse) isResponseChannelMessage_Content() {}

func (m *ResponseChannelMessage) GetContent() isResponseChannelMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ResponseChannelMessage) GetHeartbeat() *Heartbeat {
	if x, ok := m.GetContent().(*ResponseChannelMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *ResponseChannelMessage) GetCommandResponse() *CommandResponse {
	if x, ok := m.GetContent().(*ResponseChannelMessage_CommandResponse); ok {
		return x.CommandResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResponseChannelMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResponseChannelMessage_Heartbeat)(nil),
		(*ResponseChannelMessage_CommandResponse)(nil),
	}
}

type ExclusiveCommandChannelMessage struct {
	// Types that are valid to be assigned to Content:
	//	*ExclusiveCommandChannelMessage_Heartbeat
	//	*ExclusiveCommandChannelMessage_CommandRequest
	//	*ExclusiveCommandChannelMessage_Uri
	Content              isExclusiveCommandChannelMessage_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *ExclusiveCommandChannelMessage) Reset()         { *m = ExclusiveCommandChannelMessage{} }
func (m *ExclusiveCommandChannelMessage) String() string { return proto.CompactTextString(m) }
func (*ExclusiveCommandChannelMessage) ProtoMessage()    {}
func (*ExclusiveCommandChannelMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{3}
}

func (m *ExclusiveCommandChannelMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExclusiveCommandChannelMessage.Unmarshal(m, b)
}
func (m *ExclusiveCommandChannelMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExclusiveCommandChannelMessage.Marshal(b, m, deterministic)
}
func (m *ExclusiveCommandChannelMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExclusiveCommandChannelMessage.Merge(m, src)
}
func (m *ExclusiveCommandChannelMessage) XXX_Size() int {
	return xxx_messageInfo_ExclusiveCommandChannelMessage.Size(m)
}
func (m *ExclusiveCommandChannelMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ExclusiveCommandChannelMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ExclusiveCommandChannelMessage proto.InternalMessageInfo

type isExclusiveCommandChannelMessage_Content interface {
	isExclusiveCommandChannelMessage_Content()
}

type ExclusiveCommandChannelMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof"`
}

type ExclusiveCommandChannelMessage_CommandRequest struct {
	CommandRequest *CommandRequest `protobuf:"bytes,2,opt,name=commandRequest,proto3,oneof"`
}

type ExclusiveCommandChannelMessage_Uri struct {
	Uri *RocosUri `protobuf:"bytes,3,opt,name=uri,proto3,oneof"`
}

func (*ExclusiveCommandChannelMessage_Heartbeat) isExclusiveCommandChannelMessage_Content() {}

func (*ExclusiveCommandChannelMessage_CommandRequest) isExclusiveCommandChannelMessage_Content() {}

func (*ExclusiveCommandChannelMessage_Uri) isExclusiveCommandChannelMessage_Content() {}

func (m *ExclusiveCommandChannelMessage) GetContent() isExclusiveCommandChannelMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ExclusiveCommandChannelMessage) GetHeartbeat() *Heartbeat {
	if x, ok := m.GetContent().(*ExclusiveCommandChannelMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *ExclusiveCommandChannelMessage) GetCommandRequest() *CommandRequest {
	if x, ok := m.GetContent().(*ExclusiveCommandChannelMessage_CommandRequest); ok {
		return x.CommandRequest
	}
	return nil
}

func (m *ExclusiveCommandChannelMessage) GetUri() *RocosUri {
	if x, ok := m.GetContent().(*ExclusiveCommandChannelMessage_Uri); ok {
		return x.Uri
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExclusiveCommandChannelMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExclusiveCommandChannelMessage_Heartbeat)(nil),
		(*ExclusiveCommandChannelMessage_CommandRequest)(nil),
		(*ExclusiveCommandChannelMessage_Uri)(nil),
	}
}

type CommandResponse struct {
	Txid                 string         `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Ack                  *Ack           `protobuf:"bytes,2,opt,name=ack,proto3" json:"ack,omitempty"`
	Return               *CommandReturn `protobuf:"bytes,3,opt,name=return,proto3" json:"return,omitempty"`
	Result               *CommandResult `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	Seq                  uint64         `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{4}
}

func (m *CommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandResponse.Unmarshal(m, b)
}
func (m *CommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandResponse.Marshal(b, m, deterministic)
}
func (m *CommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResponse.Merge(m, src)
}
func (m *CommandResponse) XXX_Size() int {
	return xxx_messageInfo_CommandResponse.Size(m)
}
func (m *CommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResponse proto.InternalMessageInfo

func (m *CommandResponse) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *CommandResponse) GetAck() *Ack {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (m *CommandResponse) GetReturn() *CommandReturn {
	if m != nil {
		return m.Return
	}
	return nil
}

func (m *CommandResponse) GetResult() *CommandResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CommandResponse) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type Ack struct {
	Stage                Stage     `protobuf:"varint,1,opt,name=stage,proto3,enum=rambo_v1.Stage" json:"stage,omitempty"`
	Status               AckStatus `protobuf:"varint,2,opt,name=status,proto3,enum=rambo_v1.AckStatus" json:"status,omitempty"`
	Message              string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{5}
}

func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (m *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(m, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

func (m *Ack) GetStage() Stage {
	if m != nil {
		return m.Stage
	}
	return Stage_CLOUD_GATEWAY
}

func (m *Ack) GetStatus() AckStatus {
	if m != nil {
		return m.Status
	}
	return AckStatus_RECEIVED
}

func (m *Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CommandReturn struct {
	Type                 CommandReturnType `protobuf:"varint,1,opt,name=type,proto3,enum=rambo_v1.CommandReturnType" json:"type,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Payload              []byte            `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommandReturn) Reset()         { *m = CommandReturn{} }
func (m *CommandReturn) String() string { return proto.CompactTextString(m) }
func (*CommandReturn) ProtoMessage()    {}
func (*CommandReturn) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{6}
}

func (m *CommandReturn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandReturn.Unmarshal(m, b)
}
func (m *CommandReturn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandReturn.Marshal(b, m, deterministic)
}
func (m *CommandReturn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandReturn.Merge(m, src)
}
func (m *CommandReturn) XXX_Size() int {
	return xxx_messageInfo_CommandReturn.Size(m)
}
func (m *CommandReturn) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandReturn.DiscardUnknown(m)
}

var xxx_messageInfo_CommandReturn proto.InternalMessageInfo

func (m *CommandReturn) GetType() CommandReturnType {
	if m != nil {
		return m.Type
	}
	return CommandReturnType_COMMAND_OUTPUT
}

func (m *CommandReturn) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CommandReturn) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type CommandResult struct {
	Status               ResultStatus `protobuf:"varint,1,opt,name=status,proto3,enum=rambo_v1.ResultStatus" json:"status,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CommandResult) Reset()         { *m = CommandResult{} }
func (m *CommandResult) String() string { return proto.CompactTextString(m) }
func (*CommandResult) ProtoMessage()    {}
func (*CommandResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{7}
}

func (m *CommandResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandResult.Unmarshal(m, b)
}
func (m *CommandResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandResult.Marshal(b, m, deterministic)
}
func (m *CommandResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResult.Merge(m, src)
}
func (m *CommandResult) XXX_Size() int {
	return xxx_messageInfo_CommandResult.Size(m)
}
func (m *CommandResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResult.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResult proto.InternalMessageInfo

func (m *CommandResult) GetStatus() ResultStatus {
	if m != nil {
		return m.Status
	}
	return ResultStatus_COMPLETE_SUCCESS
}

func (m *CommandResult) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CommandRequest struct {
	Txid       string            `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Uri        *RocosUri         `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Parameters map[string]string `protobuf:"bytes,10,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RequireAck bool              `protobuf:"varint,11,opt,name=requireAck,proto3" json:"requireAck,omitempty"`
	Context    *ExecutionContext `protobuf:"bytes,12,opt,name=context,proto3" json:"context,omitempty"`
	//uint64 createdAt = 7; // (Required) The timestamp indicate when was the request created at
	//uint64 ttlMs = 8; // (Optional) The ttl milliseonds before timing out the command execution
	DeadlineMs           uint64   `protobuf:"varint,13,opt,name=deadlineMs,proto3" json:"deadlineMs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{8}
}

func (m *CommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRequest.Unmarshal(m, b)
}
func (m *CommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRequest.Marshal(b, m, deterministic)
}
func (m *CommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRequest.Merge(m, src)
}
func (m *CommandRequest) XXX_Size() int {
	return xxx_messageInfo_CommandRequest.Size(m)
}
func (m *CommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRequest proto.InternalMessageInfo

func (m *CommandRequest) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *CommandRequest) GetUri() *RocosUri {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *CommandRequest) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *CommandRequest) GetRequireAck() bool {
	if m != nil {
		return m.RequireAck
	}
	return false
}

func (m *CommandRequest) GetContext() *ExecutionContext {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *CommandRequest) GetDeadlineMs() uint64 {
	if m != nil {
		return m.DeadlineMs
	}
	return 0
}

type ExecutionContext struct {
	ExecutionToken       string   `protobuf:"bytes,1,opt,name=executionToken,proto3" json:"executionToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionContext) Reset()         { *m = ExecutionContext{} }
func (m *ExecutionContext) String() string { return proto.CompactTextString(m) }
func (*ExecutionContext) ProtoMessage()    {}
func (*ExecutionContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_49ffd4e409d50919, []int{9}
}

func (m *ExecutionContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionContext.Unmarshal(m, b)
}
func (m *ExecutionContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionContext.Marshal(b, m, deterministic)
}
func (m *ExecutionContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionContext.Merge(m, src)
}
func (m *ExecutionContext) XXX_Size() int {
	return xxx_messageInfo_ExecutionContext.Size(m)
}
func (m *ExecutionContext) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionContext.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionContext proto.InternalMessageInfo

func (m *ExecutionContext) GetExecutionToken() string {
	if m != nil {
		return m.ExecutionToken
	}
	return ""
}

func init() {
	proto.RegisterEnum("rambo_v1.CommandReturnType", CommandReturnType_name, CommandReturnType_value)
	proto.RegisterEnum("rambo_v1.AckStatus", AckStatus_name, AckStatus_value)
	proto.RegisterEnum("rambo_v1.ResultStatus", ResultStatus_name, ResultStatus_value)
	proto.RegisterEnum("rambo_v1.Stage", Stage_name, Stage_value)
	proto.RegisterType((*Heartbeat)(nil), "rambo_v1.Heartbeat")
	proto.RegisterType((*RequestChannelMessage)(nil), "rambo_v1.RequestChannelMessage")
	proto.RegisterType((*ResponseChannelMessage)(nil), "rambo_v1.ResponseChannelMessage")
	proto.RegisterType((*ExclusiveCommandChannelMessage)(nil), "rambo_v1.ExclusiveCommandChannelMessage")
	proto.RegisterType((*CommandResponse)(nil), "rambo_v1.CommandResponse")
	proto.RegisterType((*Ack)(nil), "rambo_v1.Ack")
	proto.RegisterType((*CommandReturn)(nil), "rambo_v1.CommandReturn")
	proto.RegisterType((*CommandResult)(nil), "rambo_v1.CommandResult")
	proto.RegisterType((*CommandRequest)(nil), "rambo_v1.CommandRequest")
	proto.RegisterMapType((map[string]string)(nil), "rambo_v1.CommandRequest.ParametersEntry")
	proto.RegisterType((*ExecutionContext)(nil), "rambo_v1.ExecutionContext")
}

func init() { proto.RegisterFile("rambo.v1.proto", fileDescriptor_49ffd4e409d50919) }

var fileDescriptor_49ffd4e409d50919 = []byte{
	// 892 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xcb, 0x8e, 0xe3, 0x44,
	0x14, 0xb5, 0xf3, 0xe8, 0xee, 0xdc, 0xbc, 0xaa, 0x6b, 0x9a, 0xc1, 0x04, 0x69, 0x26, 0xb2, 0x60,
	0x88, 0x1a, 0x29, 0x33, 0x93, 0x61, 0x01, 0x23, 0x21, 0xe1, 0x71, 0x8a, 0x4e, 0x50, 0x5e, 0x54,
	0x9c, 0x81, 0x11, 0x8b, 0xc8, 0xed, 0x94, 0xba, 0xad, 0x24, 0x76, 0xda, 0x2e, 0x47, 0x9d, 0x6f,
	0x61, 0xc1, 0x4f, 0xb0, 0xe2, 0x0f, 0x90, 0xf8, 0x28, 0xe4, 0xb2, 0xe3, 0x38, 0x21, 0x11, 0x1b,
	0x16, 0xec, 0xaa, 0xee, 0x3d, 0xf7, 0x9e, 0x73, 0xab, 0x8e, 0x5d, 0x50, 0xf1, 0xcc, 0xe5, 0xad,
	0xdb, 0x5c, 0xbf, 0x6e, 0xae, 0x3c, 0x97, 0xbb, 0xf8, 0x42, 0xec, 0xa7, 0xeb, 0xd7, 0xb5, 0x52,
	0xe0, 0xd9, 0x49, 0x5c, 0x2d, 0x42, 0xa1, 0xc3, 0x4c, 0x8f, 0xdf, 0x32, 0x93, 0xab, 0xbf, 0xca,
	0xf0, 0x11, 0x65, 0x0f, 0x01, 0xf3, 0xb9, 0x7e, 0x6f, 0x3a, 0x0e, 0x5b, 0xf4, 0x99, 0xef, 0x9b,
	0x77, 0x0c, 0xbf, 0x81, 0xc2, 0xfd, 0x16, 0xa6, 0xc8, 0x75, 0xb9, 0x51, 0x6c, 0x3d, 0x69, 0x6e,
	0x5b, 0x36, 0x93, 0x0e, 0x1d, 0x89, 0xee, 0x70, 0xf8, 0x1d, 0x54, 0x2c, 0x77, 0xb9, 0x34, 0x9d,
	0x59, 0xdc, 0x54, 0xc9, 0x88, 0x4a, 0x65, 0x57, 0xa9, 0xef, 0xe5, 0x3b, 0x12, 0x3d, 0xa8, 0x78,
	0x57, 0x80, 0x73, 0xcb, 0x75, 0x38, 0x73, 0xb8, 0xfa, 0x9b, 0x0c, 0x4f, 0x29, 0xf3, 0x57, 0xae,
	0xe3, 0xb3, 0xff, 0x42, 0x1e, 0x81, 0x6a, 0x42, 0x16, 0x75, 0x8d, 0xf5, 0x7d, 0x72, 0x44, 0x5f,
	0x04, 0xe8, 0x48, 0xf4, 0xb0, 0x26, 0xad, 0xf0, 0x2f, 0x19, 0x9e, 0x91, 0x47, 0x6b, 0x11, 0xf8,
	0xf6, 0x9a, 0xc5, 0xa5, 0xff, 0x93, 0x83, 0xc4, 0x2f, 0x20, 0x1b, 0x78, 0xb6, 0x92, 0x15, 0x85,
	0x78, 0x57, 0x48, 0x5d, 0xcb, 0xf5, 0x27, 0x9e, 0xdd, 0x91, 0x68, 0x08, 0x48, 0x8f, 0xf3, 0x87,
	0x0c, 0xd5, 0x83, 0x03, 0xc0, 0x18, 0x72, 0xfc, 0xd1, 0x9e, 0x09, 0xe9, 0x05, 0x2a, 0xd6, 0xf8,
	0x39, 0x64, 0x4d, 0x6b, 0x1e, 0x6b, 0x2a, 0xef, 0x5a, 0x6b, 0xd6, 0x9c, 0x86, 0x19, 0xfc, 0x12,
	0xce, 0x3c, 0xc6, 0x03, 0xcf, 0x89, 0xe9, 0x3f, 0x3e, 0xa2, 0x3b, 0x4c, 0xd3, 0x18, 0x16, 0x15,
	0xf8, 0xc1, 0x82, 0x2b, 0xb9, 0x93, 0x05, 0x61, 0x9a, 0xc6, 0x30, 0x8c, 0x20, 0xeb, 0xb3, 0x07,
	0x25, 0x5f, 0x97, 0x1b, 0x39, 0x1a, 0x2e, 0x55, 0x1f, 0xb2, 0x9a, 0x35, 0xc7, 0x9f, 0x43, 0xde,
	0xe7, 0xe6, 0x1d, 0x13, 0x82, 0x2b, 0xad, 0xea, 0xae, 0xd1, 0x38, 0x0c, 0xd3, 0x28, 0x8b, 0xbf,
	0x84, 0x33, 0x9f, 0x9b, 0x3c, 0xf0, 0xc5, 0x14, 0x95, 0xf4, 0x9d, 0x68, 0xd6, 0x7c, 0x2c, 0x52,
	0x34, 0x86, 0x60, 0x05, 0xce, 0x97, 0xd1, 0x75, 0x8a, 0x79, 0x0a, 0x74, 0xbb, 0x55, 0x39, 0x94,
	0xf7, 0x06, 0xc2, 0x2f, 0x21, 0xc7, 0x37, 0xab, 0x2d, 0xfb, 0xa7, 0x27, 0xe6, 0x36, 0x36, 0x2b,
	0x46, 0x05, 0x30, 0xdd, 0x3b, 0xb3, 0xd7, 0x3b, 0xcc, 0xac, 0xcc, 0xcd, 0xc2, 0x35, 0x67, 0x82,
	0xb5, 0x44, 0xb7, 0x5b, 0xf5, 0x43, 0x8a, 0x55, 0x9c, 0x46, 0x33, 0x99, 0x26, 0xe2, 0x7d, 0x9a,
	0xba, 0x6e, 0x81, 0x38, 0x3d, 0xd0, 0x3e, 0xa9, 0xfa, 0x67, 0x06, 0x2a, 0xfb, 0xd6, 0x3a, 0xea,
	0x80, 0xcf, 0x22, 0x73, 0x65, 0x4e, 0x99, 0x4b, 0x58, 0x0b, 0x77, 0x00, 0x56, 0xa6, 0x67, 0x2e,
	0x19, 0x67, 0x9e, 0xaf, 0x40, 0x3d, 0xdb, 0x28, 0xb6, 0x1a, 0xa7, 0x2c, 0xdc, 0x1c, 0x25, 0x50,
	0xe2, 0x70, 0x6f, 0x43, 0x53, 0xb5, 0xf8, 0x19, 0x80, 0xc7, 0x1e, 0x02, 0xdb, 0x63, 0x9a, 0x35,
	0x57, 0x8a, 0x75, 0xb9, 0x71, 0x41, 0x53, 0x11, 0xfc, 0x55, 0x6c, 0xe2, 0x47, 0xae, 0x94, 0x84,
	0xa6, 0xda, 0x8e, 0x86, 0x3c, 0x32, 0x2b, 0xe0, 0xb6, 0xeb, 0xe8, 0x11, 0x82, 0x6e, 0xa1, 0x61,
	0xd7, 0x19, 0x33, 0x67, 0x0b, 0xdb, 0x61, 0x7d, 0x5f, 0x29, 0x0b, 0x2f, 0xa5, 0x22, 0xb5, 0x6f,
	0xa1, 0x7a, 0x20, 0x2a, 0xf4, 0xdd, 0x9c, 0x6d, 0xe2, 0xb3, 0x08, 0x97, 0xf8, 0x0a, 0xf2, 0x6b,
	0x73, 0x11, 0x6c, 0x4f, 0x32, 0xda, 0xbc, 0xcd, 0x7c, 0x2d, 0xab, 0x6f, 0x01, 0x1d, 0x72, 0xe3,
	0x17, 0x50, 0x61, 0xdb, 0x98, 0xe1, 0xce, 0x99, 0x13, 0xb7, 0x3a, 0x88, 0x5e, 0x7f, 0x01, 0x97,
	0xff, 0x70, 0x0c, 0xc6, 0x50, 0xd1, 0x87, 0xfd, 0xbe, 0x36, 0x68, 0x4f, 0x87, 0x13, 0x63, 0x34,
	0x31, 0x90, 0x74, 0xfd, 0x1d, 0x14, 0x12, 0xc3, 0xe2, 0x12, 0x5c, 0x50, 0xa2, 0x93, 0xee, 0x7b,
	0xd2, 0x46, 0x12, 0x2e, 0xc2, 0xf9, 0x88, 0x0c, 0xda, 0xdd, 0xc1, 0x0d, 0xca, 0x60, 0x80, 0xb3,
	0x1f, 0x27, 0x64, 0x42, 0xda, 0x28, 0x1b, 0xc2, 0x46, 0x74, 0x78, 0x43, 0xc9, 0x78, 0x8c, 0x72,
	0xd7, 0xbf, 0xcb, 0x50, 0x4a, 0xbb, 0x04, 0x5f, 0x01, 0xd2, 0x87, 0xfd, 0x51, 0x8f, 0x18, 0x64,
	0x3a, 0x9e, 0xe8, 0x7a, 0x08, 0x93, 0x70, 0x19, 0x0a, 0xba, 0x36, 0xd0, 0x49, 0xaf, 0x47, 0xda,
	0x08, 0x62, 0x2d, 0x11, 0x88, 0x50, 0x3a, 0xa4, 0xa8, 0x18, 0x42, 0x8c, 0x6e, 0x9f, 0x08, 0x75,
	0xa8, 0x84, 0xab, 0x50, 0xa4, 0xe4, 0x07, 0xa2, 0x1b, 0xa4, 0x3d, 0xed, 0xb6, 0x51, 0x19, 0x5f,
	0x42, 0x39, 0x09, 0x68, 0x13, 0xa3, 0x83, 0x2a, 0xf8, 0x09, 0x54, 0x93, 0xd0, 0x48, 0xa3, 0x5a,
	0x7f, 0x8c, 0xaa, 0x58, 0x81, 0xab, 0x24, 0x38, 0x18, 0x4e, 0xe3, 0x91, 0x28, 0x42, 0xb8, 0x00,
	0xf9, 0xef, 0x35, 0x43, 0xeb, 0xa1, 0xcb, 0xeb, 0x6f, 0x20, 0x2f, 0xbe, 0xe8, 0xb0, 0xab, 0xde,
	0x1b, 0x4e, 0xda, 0xd3, 0x1b, 0xcd, 0x20, 0x3f, 0x69, 0x1f, 0x90, 0x14, 0x8a, 0x6b, 0x93, 0xf7,
	0x5d, 0x9d, 0x24, 0x31, 0x39, 0x2c, 0xd5, 0x6e, 0xc8, 0xc0, 0x40, 0x99, 0x96, 0x93, 0xfa, 0xcd,
	0x59, 0xcc, 0x5e, 0x33, 0x0f, 0xff, 0x02, 0x88, 0xb2, 0x3b, 0xdb, 0xe7, 0xcc, 0x4b, 0x62, 0xf5,
	0xbd, 0xaf, 0xe8, 0xc8, 0x33, 0x54, 0x7b, 0x9e, 0x46, 0x1c, 0x79, 0x46, 0x55, 0xa9, 0x21, 0xbf,
	0x92, 0x5b, 0x3f, 0xc3, 0x79, 0xcc, 0x87, 0xfb, 0x50, 0xd4, 0xcd, 0xc5, 0x62, 0xbb, 0x3d, 0xf9,
	0x43, 0xaf, 0xfd, 0x2b, 0xb9, 0x2a, 0xbd, 0x92, 0x6f, 0xcf, 0xc4, 0xa3, 0xfe, 0xe6, 0xef, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x76, 0xfa, 0xdc, 0x70, 0xfe, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommandReceiverClient is the client API for CommandReceiver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandReceiverClient interface {
	RegisterReceiver(ctx context.Context, opts ...grpc.CallOption) (CommandReceiver_RegisterReceiverClient, error)
}

type commandReceiverClient struct {
	cc *grpc.ClientConn
}

func NewCommandReceiverClient(cc *grpc.ClientConn) CommandReceiverClient {
	return &commandReceiverClient{cc}
}

func (c *commandReceiverClient) RegisterReceiver(ctx context.Context, opts ...grpc.CallOption) (CommandReceiver_RegisterReceiverClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CommandReceiver_serviceDesc.Streams[0], "/rambo_v1.CommandReceiver/RegisterReceiver", opts...)
	if err != nil {
		return nil, err
	}
	x := &commandReceiverRegisterReceiverClient{stream}
	return x, nil
}

type CommandReceiver_RegisterReceiverClient interface {
	Send(*ResponseChannelMessage) error
	Recv() (*RequestChannelMessage, error)
	grpc.ClientStream
}

type commandReceiverRegisterReceiverClient struct {
	grpc.ClientStream
}

func (x *commandReceiverRegisterReceiverClient) Send(m *ResponseChannelMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *commandReceiverRegisterReceiverClient) Recv() (*RequestChannelMessage, error) {
	m := new(RequestChannelMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CommandReceiverServer is the server API for CommandReceiver service.
type CommandReceiverServer interface {
	RegisterReceiver(CommandReceiver_RegisterReceiverServer) error
}

// UnimplementedCommandReceiverServer can be embedded to have forward compatible implementations.
type UnimplementedCommandReceiverServer struct {
}

func (*UnimplementedCommandReceiverServer) RegisterReceiver(srv CommandReceiver_RegisterReceiverServer) error {
	return status.Errorf(codes.Unimplemented, "method RegisterReceiver not implemented")
}

func RegisterCommandReceiverServer(s *grpc.Server, srv CommandReceiverServer) {
	s.RegisterService(&_CommandReceiver_serviceDesc, srv)
}

func _CommandReceiver_RegisterReceiver_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CommandReceiverServer).RegisterReceiver(&commandReceiverRegisterReceiverServer{stream})
}

type CommandReceiver_RegisterReceiverServer interface {
	Send(*RequestChannelMessage) error
	Recv() (*ResponseChannelMessage, error)
	grpc.ServerStream
}

type commandReceiverRegisterReceiverServer struct {
	grpc.ServerStream
}

func (x *commandReceiverRegisterReceiverServer) Send(m *RequestChannelMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *commandReceiverRegisterReceiverServer) Recv() (*ResponseChannelMessage, error) {
	m := new(ResponseChannelMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CommandReceiver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rambo_v1.CommandReceiver",
	HandlerType: (*CommandReceiverServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RegisterReceiver",
			Handler:       _CommandReceiver_RegisterReceiver_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "rambo.v1.proto",
}

// CommandClient is the client API for Command service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandClient interface {
	//rpc LeaseExclusiveCommandChannel(stream ExclusiveCommandChannelMessage) returns (stream ResponseChannelMessage) {}
	CallCommand(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (Command_CallCommandClient, error)
}

type commandClient struct {
	cc *grpc.ClientConn
}

func NewCommandClient(cc *grpc.ClientConn) CommandClient {
	return &commandClient{cc}
}

func (c *commandClient) CallCommand(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (Command_CallCommandClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Command_serviceDesc.Streams[0], "/rambo_v1.Command/CallCommand", opts...)
	if err != nil {
		return nil, err
	}
	x := &commandCallCommandClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Command_CallCommandClient interface {
	Recv() (*ResponseChannelMessage, error)
	grpc.ClientStream
}

type commandCallCommandClient struct {
	grpc.ClientStream
}

func (x *commandCallCommandClient) Recv() (*ResponseChannelMessage, error) {
	m := new(ResponseChannelMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CommandServer is the server API for Command service.
type CommandServer interface {
	//rpc LeaseExclusiveCommandChannel(stream ExclusiveCommandChannelMessage) returns (stream ResponseChannelMessage) {}
	CallCommand(*CommandRequest, Command_CallCommandServer) error
}

// UnimplementedCommandServer can be embedded to have forward compatible implementations.
type UnimplementedCommandServer struct {
}

func (*UnimplementedCommandServer) CallCommand(req *CommandRequest, srv Command_CallCommandServer) error {
	return status.Errorf(codes.Unimplemented, "method CallCommand not implemented")
}

func RegisterCommandServer(s *grpc.Server, srv CommandServer) {
	s.RegisterService(&_Command_serviceDesc, srv)
}

func _Command_CallCommand_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CommandRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CommandServer).CallCommand(m, &commandCallCommandServer{stream})
}

type Command_CallCommandServer interface {
	Send(*ResponseChannelMessage) error
	grpc.ServerStream
}

type commandCallCommandServer struct {
	grpc.ServerStream
}

func (x *commandCallCommandServer) Send(m *ResponseChannelMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _Command_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rambo_v1.Command",
	HandlerType: (*CommandServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CallCommand",
			Handler:       _Command_CallCommand_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rambo.v1.proto",
}
